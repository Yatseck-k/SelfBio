<?php

namespace Database\Seeders;

use App\Models\BlogPost;
use App\Models\ContactInfo;
use App\Models\User;
use Illuminate\Database\Seeder;

class DashboardSeeder extends Seeder
{
    public function run(): void
    {
        // Create test user if not exists
        $user = User::firstOrCreate(
            ['email' => 'hello@yats.com'],
            [
                'name' => 'Test User',
                'password' => bcrypt('TheBigPassword'),
            ]
        );

        // Create contact info
        ContactInfo::firstOrCreate([], [
            'name' => 'Backend Developer',
            'phone' => '+7 (999) 123-45-67',
            'email' => 'developer@example.com',
            'telegram' => '@developer',
            'github' => 'developer',
            'socials' => [
                ['type' => 'linkedin', 'url' => 'https://linkedin.com/in/developer'],
                ['type' => 'twitter', 'url' => 'https://twitter.com/developer'],
            ],
        ]);

        // Create sample blog posts
        $posts = [
            [
                'title' => '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ–π –±–ª–æ–≥',
                'slug' => 'welcome-to-my-blog',
                'preview' => '–ü–µ—Ä–≤—ã–π –ø–æ—Å—Ç –≤ –º–æ–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º –±–ª–æ–≥–µ –æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.',
                'body' => '<h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h2><p>–≠—Ç–æ –º–æ–π –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç –≤ –±–ª–æ–≥–µ. –ó–¥–µ—Å—å —è –±—É–¥—É –¥–µ–ª–∏—Ç—å—Å—è –æ–ø—ã—Ç–æ–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ —Ä–µ—à–µ–Ω–∏—è–º–∏ –∏ –ø–æ–ª–µ–∑–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏.</p><p>–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!</p>',
                'published_at' => now(),
            ],
            [
                'title' => 'Laravel + Vue.js: –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–µ–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
                'slug' => 'laravel-vue-modern-stack',
                'preview' => '–û–±–∑–æ—Ä —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å—Ç–µ–∫–∞ –¥–ª—è –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å Laravel –∏ Vue.js.',
                'body' => '<h2>–ü–æ—á–µ–º—É Laravel + Vue.js?</h2><p>–≠—Ç–æ—Ç —Å—Ç–µ–∫ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –º–æ—â–Ω—ã–µ –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.</p><h3>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</h3><ul><li>–ë—ã—Å—Ç—Ä–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞</li><li>–û—Ç–ª–∏—á–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</li><li>–ë–æ–≥–∞—Ç–∞—è —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞</li></ul>',
                'published_at' => now()->subDays(3),
            ],
        ];

        foreach ($posts as $postData) {
            BlogPost::firstOrCreate(
                ['slug' => $postData['slug']],
                $postData
            );
        }

        // Create sample tasks for the user
        $user->tasks()->firstOrCreate(
            ['title' => '–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∞—à–±–æ—Ä–¥'],
            [
                'description' => '–î–æ—Ä–∞–±–æ—Ç–∞—Ç—å –≤—Å–µ –≤–∏–¥–∂–µ—Ç—ã –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏',
                'priority' => 'high',
                'due_date' => now()->addDays(2),
            ]
        );

        $user->tasks()->firstOrCreate(
            ['title' => '–ù–∞–ø–∏—Å–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é'],
            [
                'description' => '–°–æ–∑–¥–∞—Ç—å README –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é',
                'priority' => 'medium',
                'due_date' => now()->addWeek(),
            ]
        );

        // Create sample calendar events
        $user->calendarEvents()->firstOrCreate(
            ['title' => '–í—Å—Ç—Ä–µ—á–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π'],
            [
                'description' => '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞ –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
                'start_date' => now()->addDays(1)->setTime(10, 0),
                'end_date' => now()->addDays(1)->setTime(11, 0),
                'color' => '#3B82F6',
            ]
        );

        $user->calendarEvents()->firstOrCreate(
            ['title' => '–ö–æ–¥-—Ä–µ–≤—å—é'],
            [
                'description' => '–†–µ–≤—å—é –Ω–æ–≤–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞',
                'start_date' => now()->addDays(2)->setTime(14, 0),
                'end_date' => now()->addDays(2)->setTime(15, 30),
                'color' => '#10B981',
            ]
        );

        // Create sample quick links
        $links = [
            [
                'title' => 'GitHub',
                'url' => 'https://github.com',
                'icon' => 'üêô',
                'category' => '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
                'color' => '#333333',
                'order' => 1,
            ],
            [
                'title' => 'Laravel Docs',
                'url' => 'https://laravel.com/docs',
                'icon' => 'üìö',
                'category' => '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
                'color' => '#FF2D20',
                'order' => 2,
            ],
            [
                'title' => 'Vue.js',
                'url' => 'https://vuejs.org',
                'icon' => 'üíö',
                'category' => '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
                'color' => '#4FC08D',
                'order' => 3,
            ],
            [
                'title' => 'Gmail',
                'url' => 'https://gmail.com',
                'icon' => 'üìß',
                'category' => '–û–±—â–µ–µ',
                'color' => '#EA4335',
                'order' => 4,
            ],
        ];

        foreach ($links as $linkData) {
            $user->quickLinks()->firstOrCreate(
                ['title' => $linkData['title']],
                array_merge($linkData, ['user_id' => $user->id])
            );
        }

        $this->command->info('Dashboard demo data created successfully!');
    }
}
